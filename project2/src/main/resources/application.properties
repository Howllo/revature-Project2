# Database Configuration - This should be like this and get inject at CI/CD pipeline.
spring.datasource.url=jdbc:postgresql://localhost:5432/project1
spring.datasource.username=postgres
spring.datasource.password=postgresql
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# HCaptcha
hcaptcha.secret=ES_fefb71f5b6df4268a448857b6874dd2e

# JWT Configuration - Create test secret at https://jwtsecret.com/generate
jwt.secret=315bd64b9a50f675b9cfe6aca7347741e6fde90765f08d06a005b06eff4e384bf2e2c55246cb1c5fd9365e349cf0d5710939fb02654bb63902d2ab267e4b2f17d5453fb3858316ffc8d075e3a23b210bcbcb44ece126b07d8072c74db426eb5082efdd9cf729faafb2169626d2f69ae03448bbfc188dbadacb6f474f9ba4de748eb1da9cf2b435809dbc4b87e71e4fdaeda608c1af9a572bb58d0d18119a975e6ae4f47de2440f4d33e5e092d0279487e70c795e8db5494719f51ec4c09e4956140e0120a5426610e6bda6a613fa6da22bff620df3efc24a97d3df435c67fe9dbe6dd181ae1c1502ec01035e513dc5fa0b2807ca1f62892a63c18c1950f39ed94751ab1dd09b82d3bda614e196a26f2a6af64df57ce6956cf9638b2c53683f3e8b608b67d7d2d99a95abf24954c420f012e3e3df4e25a53a1005ef9a0d0e820da209f803cc4ba736a318cf429bc8f5b8c3f7e98b521fd0afa3d324c6484ec14880ddc03c148a5267e34038049f14dddc56d6379d3bcc61a5c095b41abdc586e359722d78f957edd13d85c8f5babd03d4d410c0ddd0d7ed59df77d216662b380044ecf196b50d03e1123237dcca79651b455226ecccd5d43b08e00b7bf76c288ef199870fdf96069def82eb67a5905373847223616a1bb2348c8760ff3d32aaa6c1a73ce642506a7a9091b18b54c52a9e03d4ca80228c4eb712dc18a62380924e
jwt.expiration=86400

# For the use of Argon2 encoder.
argon2.saltLength=16
argon2.hashLength=32
argon2.parallelism=1
argon2.memory=65536
argon2.iterations=4

# File Path
app.resource.path=Z:/Revature/Project1/Resource/
file.resource.url="http://localhost:8080/files/"

# Cross Origin
app.cors.allowed-origins=http://localhost:3000, http://localhost:5173, http://localhost:8080